name: Build, push & deploy to Azure dev
on:
  push:
    branches: edrv

jobs:
  build-push-restart:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      # environment-specific vars
      REGISTRY: edrvn8n
      IMAGE_NAME: dev # repository inside ACR
      IMAGE_TAG: latest
      APP_NAME: edrv-n8n-dev
      RG_NAME: n8n-resources

    steps:
      - uses: actions/checkout@v4

      - name: Azure login (OIDC, no secrets)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Derive REGISTRY_SERVER env
        run: echo "REGISTRY_SERVER=${REGISTRY}.azurecr.io" >> $GITHUB_ENV

      - name: Fetch ACR access token
        id: acr_token
        uses: azure/cli@v2
        with:
          inlineScript: |
            TOKEN=$(az acr login \
                     --name $REGISTRY \
                     --expose-token \
                     --output tsv --query accessToken)
            echo "::add-mask::$TOKEN"
            echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Docker login with token
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_SERVER }}
          username: 00000000-0000-0000-0000-000000000000 # literal value per ACR docs
          password: ${{ steps.acr_token.outputs.token }}

      - uses: pnpm/action-setup@v4     # installs pnpm into PATH
        with:
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build:n8n

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      # — Build & push using the official Dockerfile path —
      - uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./docker/images/n8n/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NODE_VERSION=22
            N8N_VERSION=snapshot
            N8N_RELEASE_TYPE=dev
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      - name: Restart App Service
        uses: azure/cli@v2
        with:
          inlineScript: |
            az webapp restart \
              --name ${{ env.APP_NAME }} \
              --resource-group ${{ env.RG_NAME }}
